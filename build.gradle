plugins {
    id 'java-library'
    id 'maven-publish'
}

group = 'dev.nightowl'
version = '1.0.4'

repositories {
    mavenCentral()
}

dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.34'
    annotationProcessor 'org.projectlombok:lombok:1.18.34'
    
    testCompileOnly 'org.projectlombok:lombok:1.18.34'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.34'
    
    implementation 'dnsjava:dnsjava:3.6.0'
    
    testImplementation 'org.junit.jupiter:junit-jupiter:5.10.1'
    testImplementation 'org.assertj:assertj-core:3.24.2'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher:1.10.1'

    testImplementation 'org.openjdk.jmh:jmh-core:1.37'
    testAnnotationProcessor 'org.openjdk.jmh:jmh-generator-annprocess:1.37'
}

test {
    useJUnitPlatform()
    maxHeapSize = '1G'
}

tasks.register('benchmark', JavaExec) {
    dependsOn testClasses
    classpath = sourceSets.test.runtimeClasspath
    mainClass = 'org.openjdk.jmh.Main'
    args = ['.*Benchmark.*', '-f', '1', '-wi', '3', '-i', '5', '-r', '1', '-rf', 'json', '-rff', 'benchmark-results.json']

}

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17

    withSourcesJar()
    withJavadocJar()
}

javadoc {
    options.encoding = 'UTF-8'
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}



publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifactId = 'mailjudge'
        }
    }
    repositories {
        maven {
            url = uri("${buildDir}/repo")
        }
    }
}

